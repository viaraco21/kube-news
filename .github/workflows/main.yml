## 1. O pipeline deve ser ativado sempre que um novo commit for feito na branch main. ✔
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
           
      # configuracao para acessar o Docker Hub

      - name: Set up Docker
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.SECRET_RACO1 }}
          password: ${{ secrets.SECRET_RACO }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: |
            raco21/kube-news:v${{ github.run_number }}

# 2. O pipeline deve executar os seguintes passos: 
  # Criacao do Release
  
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v6.4.8   # Substituir por sua versão dinâmica
          release_name: Release v6.4.8
          body: |
            Esta é a versão 6.4.8 da aplicação.
            - Lista de mudanças relevantes no release.
          draft: false
          prerelease: false

    # Notifica o DevOps em caso de falha  
      - name: Notify Failure
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          from: ${{ secrets.EMAIL_USERNAME }}
          subject: "Approval Job Failed - ${{ github.repository }}"
          body: "O job de aprovação falhou para o repositório ${{ github.repository }}. Confira o workflow para mais detalhes."
          to: ${{ secrets.DEVELOPER_EMAIL }}    

# 3. Se todos os passos acima forem bem-sucedidos, o pipeline deve fazer o deploy da aplicação em um ambiente de teste. ✔
  
  CD:
    runs-on: ubuntu-latest
    needs:
      - CI
    environment: 
      name: production # Substituir pelo nome do seu ambiente real
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Kubernetes Context
        uses: Azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K8S_CONFIG }}

    # # Step adicional para deletar os deployments existentes para atualizar a imagem
    #   - name: Delete Existing Deployments
    #     run: kubectl delete deployment kubenews
    #     env: 
    #      KUBECONFIG: ${{ secrets.K8S_CONFIG }}   

    # # Apply the deployment configuration to recreate the deployment
    #   - name: Apply Deployment Configuration
    #     run: kubectl apply -f k8s/deployment.yaml
    #     env:
    #      KUBECONFIG: ${{ secrets.K8S_CONFIG }}        

      # - name: Create kubeconfig file
      #   run: echo "${{ secrets.K8S_CONFIG }}" > $HOME/.kube/config
      #   shell: bash

      # - name: Apply Deployment
      #   run: |
      #    kubectl delete deployment kubenews
      #    kubectl apply -f k8s/deployment.yaml

    # Deploy no Kubernetes cluster    

      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v4.9     
        with:
          images: raco21/kube-news:v${{ github.run_number }}
          manifests: |
            k8s/deployment.yaml

    # Informa o endereco para acessar a aplicacao
      - name: Get Application URL
        run: |
          APP_IP=$(kubectl get svc kubenews -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "Application is available at http://${APP_IP}"

    # Notifica o DevOps sobre o final do Deploy

      - name: Notify on CI Approval
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          from: ${{ secrets.EMAIL_USERNAME }}
          subject: "CI Job Approved - ${{ github.repository }}"
          body: |
            O job CI foi aprovado para o repositório ${{ github.repository }}.
            A aplicação está disponível
          to: ${{ secrets.DEVELOPER_EMAIL }}
